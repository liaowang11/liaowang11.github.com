<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bits and Bytes]]></title>
  <link href="http://liaowang11.github.com/atom.xml" rel="self"/>
  <link href="http://liaowang11.github.com/"/>
  <updated>2013-03-19T10:28:40+08:00</updated>
  <id>http://liaowang11.github.com/</id>
  <author>
    <name><![CDATA[wliao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Just love mayday]]></title>
    <link href="http://liaowang11.github.com/blog/2013/03/19/just-love-mayday/"/>
    <updated>2013-03-19T09:59:00+08:00</updated>
    <id>http://liaowang11.github.com/blog/2013/03/19/just-love-mayday</id>
    <content type="html"><![CDATA[<h2>抢票攻略</h2>

<p>分析了一下昨天北京场的网站结构,Flash部分就没看了。总之，第一时间获取到选座地址是最重要的。</p>

<h3>前提</h3>

<ol>
<li>选座地址不需要答题就可以进入，并且没有验证是否答题的机制。</li>
<li>答题那太水了，2道题4个问 选8次好歹也进去了吧（如果你够背）。这里的验证全用的Javascript，答案都存在JSON里。所以，完全可以无视。</li>
</ol>


<h3>熟悉流程</h3>

<p>一般抢<a href="http://damai.cn">大麦</a>的票的流程是:</p>

<pre><code>票信息地址 -》 点免费 -》 点选座 -》 答题 -》 选座
</code></pre>

<p>我把能省略的都尽量省略了，只需要</p>

<pre><code>票信息地址 -》 选座
</code></pre>

<p>这里两个Id比较重要：<strong>TicketId</strong>（也叫<strong>ProjectID</strong>)和<strong>PerformID</strong>。</p>

<p>我们要首先取到的就是后者。因为选座的地址是 http://seat.damai.cn/xuanzuo/187617</p>

<pre><code>http://seat.damai.cn/xuanzuo/:PerformId
</code></pre>

<p>简单来说就是(如果没有curl，就只有用浏览器打开，查看源代码，然后搜索performid了）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -s http://www.damai.cn/ticket_47576.html | grep -i -o -P <span class="s1">&#39;performid=(\d+)&#39;</span>
</span><span class='line'><span class="nv">performID</span><span class="o">=</span>187617
</span><span class='line'>firefox http://seat.damai.cn/xuanzuo/187617
</span></code></pre></td></tr></table></div></figure>


<h3>准备充分</h3>

<ol>
<li>务必先进选座那地址，把Flash程序缓存了，那个下载很慢。</li>
<li>抢到速度下单，结账。</li>
<li><del>好像没有3了。。</del>一定要先登录啊！像这种statefull的网站，瓶颈之一就是存储在服务器端的sessionID。先登录上，把session拿下。</li>
<li>身份证号什么的，先打出来到时候复制粘贴。</li>
</ol>


<h2>GoodLuck</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sina OAuth]]></title>
    <link href="http://liaowang11.github.com/blog/2013/03/15/sina-oauth/"/>
    <updated>2013-03-15T23:14:00+08:00</updated>
    <id>http://liaowang11.github.com/blog/2013/03/15/sina-oauth</id>
    <content type="html"><![CDATA[<p>Recently, I read a post about <a href="http://www.nirgoldshlager.com/2013/02/how-i-hacked-facebook-oauth-to-get-full.html">Facebook Oauth Flaws</a>. The post is
interesting, so I can&#8217;t resist to give it a try on some other services
leveraging Oauth. And the most popular one in China should undoubtedly
be <a href="http://weibo.com">Sina Weibo</a>.</p>

<h2>Sina Weibo Oauth</h2>

<p>The entry point to oauth can be located at
<a href="https://api.weibo.com/oauth2">here</a>. The developer center gave a
overview of the oauth workflow.</p>

<p><img src="http://www.sinaimg.cn/blog/developer/wiki/oAuth2_02.gif" alt="Oauth code authentication flow" /></p>

<h2>Insite App Authentication</h2>

<p>Take <a href="http://apps.weibo.com/guanjia">guanjia</a> as an example. The
authentication url is here:</p>

<p><a href="https://api.weibo.com/oauth2/authorize?response_type=token&amp;client_id=1567453627&amp;redirect_uri=http%3A%2F%2Fapps.weibo.com/guanjia">https://api.weibo.com/oauth2/authorize?response_type=token&amp;client_id=1567453627&amp;redirect_uri=http%3A%2F%2Fapps.weibo.com/guanjia</a></p>

<h3>Ass Kicked</h3>

<p>After I read the Oauth Protocol, I tried very hard to find the access
token return by posting to the <strong>redirect_uri</strong>. But the response
return after confirm the authentication is merely a line of
javascript:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span><span class="nx">top</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="s2">&quot;http://apps.weibo.com/guanjia&quot;</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is no <strong>Access Token</strong>! What the hell.</p>

<p>Later on, I discovered because this is an insite app, which sharing
the same domain as apps.weibo.com. That is to say the page is still
returned by Sina, not posting to <strong>redirect_uri</strong>.</p>

<p>At last, an <code>iframe</code> embedded in that page is the real page get posted
to. The <strong>Access Token</strong> is named <strong>signed_request</strong>.</p>

<h3>Format</h3>

<p><a href="https://api.weibo.com/oauth2/authorize?response_type=token&amp;client_id=1567453627&amp;redirect_uri=http%3A%2F%2Fapps.weibo.com/guanjia">https://api.weibo.com/oauth2/authorize?response_type=token&amp;client_id=1567453627&amp;redirect_uri=http%3A%2F%2Fapps.weibo.com/guanjia</a></p>

<p>The <strong>client_id</strong> in the url is unique to every app. You have to
register a developer account and propose to get your app&amp;secret key and
get assigned a <strong>client_id</strong>.</p>

<p>What we are focusing here is <strong>redirect_uri</strong> which the essence of
<a href="http://www.nirgoldshlager.com/2013/02/how-i-hacked-facebook-oauth-to-get-full.html">Nir Goldshlager</a> article. The problem about
<a href="http://www.facebook.com">Facebook</a> is that it does not check enough
or maybe potentially omitted it&#8217;s own subdomain.</p>

<h3>Sina Offical Apps</h3>

<p>I checked the url above, but actually didn&#8217;t found the same issue.
IMHO, sina official apps are treated totally different, each owning a
different subdomain. And redirecting to the subdomains doesn&#8217;t work,
which result in a very obvious error:</p>

<blockquote><p>error:redirect_uri_mismatch</p></blockquote>

<h2>Findings</h2>

<p>A follow-up post about <a href="http://www.nirgoldshlager.com/2013/03/how-i-hacked-any-facebook-accountagain.html">Facebook Oauth</a> stated that facebook fixed
the problem by fixing or using regular expression matching. It&#8217;s easy
to see Sina also uses regular expression to check the
<strong>redirect_uri</strong>.</p>

<p>What I found out are:</p>

<ol>
<li>Numbers are not checked. That is to say appending numbers to the
url passes the check and the page get redirect to an error page, which
in most circumstances cannot be found. But I don&#8217;t think Sina will
approve a new app name which is mostly the same with another.:)</li>
<li>In fact, at first I&#8217;m not so familiar with <a href="http://tools.ietf.org/html/rfc6749">OAuth Protocol</a>. In
sum, the flows examined here is not as severe as I thought. When
requesting access to resources, it needs to provide <strong>app secret_id</strong>
as well as the <strong>access token</strong>. The two are tied. So even if one can manage to steal
your <strong>access token</strong>, without <strong>secret_id</strong> it poses no threats.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ender.js vs Jquery.js]]></title>
    <link href="http://liaowang11.github.com/blog/2012/01/05/new-post/"/>
    <updated>2012-01-05T23:59:00+08:00</updated>
    <id>http://liaowang11.github.com/blog/2012/01/05/new-post</id>
    <content type="html"><![CDATA[<blockquote><p>Happy new year, guys.
Never ask me about the scrollbar on my blog. I just don&#8217;t know why it&#8217;s color looks like this. :)</p></blockquote>

<p>Anyway.</p>

<p>I like <a href="http://bottlepy.org/docs/dev/" title="From Bottle">sidelegend</a> alike effects so much. So I just plagiarized from Bottle.</p>

<p>But, oops. The octopress used library <a href="http://ender.no.de/%20A%20brief%20intro">Ender.js</a> which just overwrite the <em>$</em>.</p>

<p>So, I plan to port(maybe should use such a big verb) <em>sidelegend</em>.</p>

<p>No big job, not a lot of codes.</p>

<p>I will post the code to my <a href="https://github.comm/liaowang11"> github </a>.</p>

<h2 id="Done">
<a class="headerlink"></a>Ok, It&#8217;s done.
</h2>


<p>check out <a href="https://github.com/liaowang11/sidelegend">sidelegend</a>.</p>

<p>BTW, it&#8217;s really easy to get confused about <strong>$(this)</strong> and <strong>this</strong>.</p>

<p>Next time, tell you some thing about <em>Microsoft Asia Research</em>..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[F# starter]]></title>
    <link href="http://liaowang11.github.com/blog/2011/11/30/f-number-starter/"/>
    <updated>2011-11-30T19:30:00+08:00</updated>
    <id>http://liaowang11.github.com/blog/2011/11/30/f-number-starter</id>
    <content type="html"><![CDATA[<p>Recently, i&#8217;m so absorbed in Haskell and tried hard to understand the <a href="http://www.scs.stanford.edu/11au-cs240h/">lectures from stanford</a>.
I like Haskell, I have to say. It seems to make things more obvious and safe to do. Though, sometimes the high level abstraction may kill your guts.</p>

<p>While interested in functional programming, I start reading &#8220;Lambda-Calculus and Combinators, an Introduction&#8221; by J.Roger Hindley, which is recommended by <a href="http://matt.might.net/#teaching">Matt Might</a>. He is a such a teacher, though I never got the privilege to be his students. :)</p>

<p>So here, with win$ platform, F# seems to be the best language to study and also recommended a lot on StackOverFlow for someone who is familiar with .NET.
This post is just for recording my learning experience with this language.</p>

<h2 id="intro">
Introduction
<a class="headerlink" href="#intro"></a>
</h2>


<p>Just a brief overview of this language. F# is often compared with Ocaml</p>
]]></content>
  </entry>
  
</feed>
